# -*- coding: utf-8 -*-
"""AbdlrahmanAyman.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ws5qC7KLWCagOjvWGQkhDyFg4R1As6cQ

🛠️ Mini Project: Bringing It All Together
Welcome to your first mini project! 🎉
In this notebook, you'll build a Simple Calculator using everything you've learned so far:
✅ Input and Output
✅ Control Structures (if/elif/else)
✅ Functions
✅ Error Handling
✅ Data Types and Operators
💡 Why a calculator?
It's practical and easy to relate to.
It reinforces logic and syntax.
It integrates core Python concepts.

 🎯 Project Goals & Requirements
Before jumping into code, let’s define what we want our calculator to do.
🔍 Objectives
Build a command-line calculator that supports:
Addition ➕
Subtraction ➖
Multiplication ✖️
Division ➗
📋 Requirements
Take two numbers as input from the user.
Ask for the operation to perform (+, -, *, /).
Validate the input (handle invalid numbers or operations).
Perform the calculation and display the result.
Allow user to run it again or exit.
 🎯 Project Goals & Requirements
Before jumping into code, let’s define what we want our calculator to do.
🔍 Objectives
Build a command-line calculator that supports:
Addition ➕
Subtraction ➖
Multiplication ✖️
Division ➗
📋 Requirements
Take two numbers as input from the user.
Ask for the operation to perform (+, -, *, /).
Validate the input (handle invalid numbers or operations).
Perform the calculation and display the result.
Allow user to run it again or exit.

 🧠 Planning the Project Structure
Before we write code, let’s break the calculator into smaller parts.
🧩 Project Components
Display Menu
Show available operations to the user.
Get User Input
Read two numbers.
Ask for the operation.
Perform Calculation
Use if/elif/else to determine the operation.
Return the result.
Error Handling
Check if inputs are valid numbers.
Handle division by zero or invalid operations.
Repeat or Exit
 🧠 Planning the Project Structure
Before we write code, let’s break the calculator into smaller parts.
🧩 Project Components
Display Menu
Show available operations to the user.
Get User Input
Read two numbers.
Ask for the operation.
Perform Calculation
Use if/elif/else to determine the operation.
Return the result.
Error Handling
Check if inputs are valid numbers.
Handle division by zero or invalid operations.
Repeat or Exit
"""

def display_menu():
    print("\n Calculator Menu:")
    print("1. Addition")
    print("2. Subtraction")
    print("3. Multiplication")
    print("4. Division")
    print("5. Modules")
    print("6. Square")
    print("7. Squar root")
    print("8. power")
    print("9. Absolute Value")
    print("10. Factorial")
    print("11. Exit\n")

def add (x, y):
    return x + y
def subtract (x, y):
    return x-y
def multiply (x, y):
    return x*y
def divide (x, y):
    if y!= 0:
        return x/y
    else:
      print("Error: Division by zero")
      return None
def modules(x, y):
    return x%y
def square(x):
    return x**2
def square_root(x):
    if x < 0:
        print("Error: Cannot calculate square root of a negative number")
        return None
    else:
        return x**0.5
def power(x, y):
    return x**y
def absolute_value(x):
    return abs(x)
def factorial(x):
  if x < 0:
        print("Error: Factorial is not defined for negative numbers")
        return None
  else:
    if x == 0 or x == 1:
        return 1
    else:
       result=x*factorial(x-1)
       return result
def calc():
    display_menu()
    op = input("Enter your choice (1-11): ")
    if op == '1':
        num1 = float(input("Enter first number: "))
        num2 = float(input("Enter second number: "))
        result = add(num1, num2)
        print("Result:", result)

    elif op == '2':
        num1 = float(input("Enter first number: "))
        num2 = float(input("Enter second number: "))
        result = subtract(num1, num2)
        print("Result:", result)
    elif op == '3':
        num1 = float(input("Enter first number: "))
        num2 = float(input("Enter second number: "))
        result = multiply(num1, num2)
        print("Result:", result)
    elif op == '4':
        num1 = float(input("Enter first number: "))
        num2 = float(input("Enter second number: "))
        result = divide(num1, num2)
        print("Result:", result)
    elif op == '5':
        num1 = float(input("Enter first number: "))
        num2 = float(input("Enter second number: "))
        result = modules(num1, num2)
        print("Result:", result)
    elif op == '6':
        num = float(input("Enter number: "))
        result = square(num)
        print("Result:", result)
    elif op == '7':
        num = float(input("Enter number: "))
        result = square_root(num)
        print("Result:", result)
    elif op == '8':
        num1 = float(input("Enter first number: "))
        num2 = float(input("Enter second number: "))
        result = power(num1, num2)
        print("Result:", result)
    elif op == '9':
        num = float(input("Enter number: "))
        result = absolute_value(num)
        print("Result:", result)
    elif op == '10':
        num = int(input("Enter number: "))
        result = factorial(num)
        print("Result:", result)
    else:
      print("Invalid choice. Please try again.\n")
      calc()

calc()
while True:
    repeat = input("Do you want to perform another operation? (y/n): ")
    if repeat.lower() == 'y':
        calc()
    else:
        print("\nThank you for using the calculator. Goodbye!")
        break